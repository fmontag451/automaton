[tox]
minversion = 1.8
envlist = py34-{test,pylint}

[base]
command_clean = {envpython} scripts/clean py:{toxinidir}/automaton:inf py:{toxinidir}/test:inf py:{toxinidir}:0 data:build data:dist

[testenv]
install_command = pip install --upgrade -I {opts} {packages}

deps =
    test:	-r{toxinidir}/requirements/test.txt
    pylint:	-r{toxinidir}/requirements/pylint.txt
    coverage:	-r{toxinidir}/requirements/test.txt

commands =
    test:	{[base]command_clean}
    test:	py.test --basetemp {envtmpdir} --doctest-modules test
    test:	py.test --basetemp {envtmpdir} --doctest-modules automaton
    test:	{[base]command_clean}

    pylint:	{envpython} scripts/redirect -o file:{envdir}/QA/pylint.log -o stdout: -- {envbindir}/pylint --rcfile {toxinidir}/pylint.ini automaton
    pylint:	{[base]command_clean}

    coverage:	{[base]command_clean}
    coverage:	{[base]command_create_coveragerc}
    coverage:	{envpython} scripts/redirect -o file:{envdir}/tox.coveragerc -e stderr: -- sed {toxinidir}/.coveragerc -e 's%[ ]*directory[ ]*=.*%directory = '{envdir}'/QA/coverage%g'
    coverage:	coverage erase
    coverage:	py.test --cov automaton --cov-report=html --cov-config={envdir}/tox.coveragerc test
    coverage:	{[base]command_clean}

[testenv:docs]
basepython = python3.4
changedir = docs
deps = -r{toxinidir}/requirements/docs.txt
whitelist_externals =
    make
commands =
    make clean
    make doctest
    make html

[pytest]
minversion = 2.5
addopts = -rsf --maxfail=3 -q --doctest-modules --ignore build --ignore dist
doctest_optionflags = IGNORE_EXCEPTION_DETAIL
